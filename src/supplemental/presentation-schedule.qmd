---
title: "Presentation schedule"
---

Tentative schedule as of `r Sys.time()`.

## Background

This page documents how the presentation schedule can be automatically generated from the student survey.

## Download data

```{r}
googledrive::drive_auth(email = "rick.o.gilmore@gmail.com")
```

```{r}
if (!dir.exists('csv')) {
  dir.create('csv')
}

csv_fn <- "csv/psych-490-2025-spring-presentations.csv"

googledrive::drive_download(
  file = 'PSYCH 490.001 Spring 2025 Project Info (Responses)',
  path = csv_fn,
  type = 'csv',
  overwrite = TRUE
  
)
```

```{r}
if (file.exists(csv_fn)) {
  presentations_df <- readr::read_csv(csv_fn, show_col_types = FALSE)
} else {
  message("File not found: ", csv_fn)
  presentations_df <- NULL
}
```

## Clean the data

```{r}
new_names <-
  c(
    "Timestamp",
    "Authors",
    "Title",
    "Format",
    "Give_talk",
    "Preferred_date"
  )

# Make new data frame with long and short names for reference
presentation_qs <- tibble::tibble(q_long = names(presentations_df), q_short = new_names)

# Swap out old (long) names for new (short) names
names(presentations_df) <- new_names
```

## Show all presenters

```{r}
presentations_df |>
  dplyr::filter(!stringr::str_detect(Preferred_date, "Not presenting")) |>
  dplyr::arrange(Timestamp) |>
  dplyr::select(Timestamp, Authors, Preferred_date) |>
  kableExtra::kable(format = 'html')
```


## Select subsets by preferred date

I assigned students by preferred date and the date they completed the survey.
Students who indicated no preference were added to open spots in the schedule in the order that they completed the survey.

```{r}
presentations_df <- presentations_df |>
  dplyr::filter(!stringr::str_detect(Authors, "Gilmore")) |>
  dplyr::mutate(assigned = FALSE)

thu_24_df <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "24"),
                Give_talk == "Yes")

tue_29_df <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "29"),
                Give_talk == "Yes")

thu_01_df <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "01"),
                Give_talk == "Yes")

no_pref <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "No preference"),
                Give_talk == "Yes")

times <- c("09:10", "09:25", "09:40", "09:55")
```

## Day 1: Thursday, April 24

```{r}
n_thu_24_df <- dim(thu_24_df)[1]
n_no_pref <- dim(no_pref)[1]

n_thu_24_slots_free <- length(times) - n_thu_24_df

if (n_thu_24_slots_free > 0) {
  new_thu_24_df <- rbind(thu_24_df, no_pref[1:n_thu_24_slots_free,])
} else {
  new_thu_24_df <- thu_24_df
}
#new_thu_24_df <- rbind(thu_24_df, no_pref[1:n_thu_24_slots_free,])
new_thu_24_df$Time <- times

no_pref$assigned[1:n_thu_24_slots_free] <- TRUE

new_thu_24_df |>
  dplyr::filter(!is.na(Authors)) |>
  dplyr::arrange(Time) |>
  dplyr::select(Time, Authors, Title, Format) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Day 2: Tuesday, April 29

```{r}
n_tue_29_df <- dim(tue_29_df)[1]

no_pref_remaining <- no_pref[no_pref$assigned == FALSE,]
n_tue_29_remaining <- length(times) - n_tue_29_df

index_to_assign <- c(1:length(no_pref_remaining))[1:n_tue_29_remaining]

new_tue_29_df <- rbind(tue_29_df, 
                       no_pref_remaining[index_to_assign,])
new_tue_29_df$Time <- times

no_pref_remaining$assigned[index_to_assign] <- TRUE

new_tue_29_df |>
  dplyr::filter(!is.na(Authors)) |>
  dplyr::arrange(Time) |>
  dplyr::select(Time, Authors, Title, Format) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Day 3: Thursday, May 1

```{r}
no_pref_remaining <- no_pref_remaining[no_pref_remaining$assigned == FALSE,]
n_thu_01_remaining <- length(times) - n_tue_29_df

index_to_assign <- c(1:length(no_pref_remaining))[1:n_thu_01_remaining]

new_thu_01_df <- rbind(thu_01_df, 
                       no_pref_remaining[index_to_assign,])
new_thu_01_df$Time <- times[1:dim(new_thu_01_df)[1]]

# no_pref$assigned[index_to_assign] <- TRUE

new_thu_01_df |>
  dplyr::filter(!is.na(Authors)) |>
  dplyr::arrange(Time) |>
  dplyr::select(Time, Authors, Title, Format) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```
