---
title: "Presentation schedule"
---

Tentative schedule as of `r Sys.time()`.

## Background

This page documents how the presentation schedule can be automatically generated from the student survey.

## Download data

```{r}
googledrive::drive_auth(email = "rick.o.gilmore@gmail.com")
```

```{r}
if (!dir.exists('csv')) {
  dir.create('csv')
}

csv_fn <- "csv/psych-490-2025-spring-presentations.csv"

googledrive::drive_download(
  file = 'PSYCH 490.001 Spring 2025 Project Info (Responses)',
  path = csv_fn,
  type = 'csv',
  overwrite = TRUE
  
)
```

```{r}
if (file.exists(csv_fn)) {
  presentations_df <- readr::read_csv(csv_fn, show_col_types = FALSE)
} else {
  message("File not found: ", csv_fn)
  presentations_df <- NULL
}
```

## Clean the data

```{r}
new_names <-
  c(
    "Timestamp",
    "Authors",
    "Title",
    "Format",
    "Give_talk",
    "Preferred_date"
  )

# Make new data frame with long and short names for reference
presentation_qs <- tibble::tibble(q_long = names(presentations_df), q_short = new_names)

# Swap out old (long) names for new (short) names
names(presentations_df) <- new_names
```

## Select subsets by preferred date

```{r}
presentations_df <- presentations_df |>
  dplyr::filter(!stringr::str_detect(Authors, "Gilmore"))

thu_24_df <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "24"),
                Give_talk == "Yes")

tue_29_df <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "29"),
                Give_talk == "Yes")

thu_31_df <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "01"),
                Give_talk == "Yes")

no_pref <- presentations_df |>
  dplyr::filter(stringr::str_detect(Preferred_date, "No preference"),
                Give_talk == "Yes")

times <- c("09:10", "09:25", "09:40", "09:55")
```

## Day 1: Thursday, April 24

```{r}
n_thu_24_df <- dim(thu_24_df)[1]
n_no_pref <- dim(no_pref)[1]

n_thu_24_slots_free <- length(times) - n_thu_24_df

new_thu_24_df <- rbind(thu_24_df, no_pref[1:n_thu_24_slots_free,])
new_thu_24_df$Time <- times

new_thu_24_df |>
  dplyr::filter(!is.na(Authors)) |>
  dplyr::arrange(Time) |>
  dplyr::select(Time, Authors, Title, Format) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Day 2: Tuesday, April 29

```{r}
tue_29_df$Time <- times[1:dim(tue_29_df)[1]]

tue_29_df |>
  dplyr::filter(!is.na(Authors)) |>
  dplyr::arrange(Time) |>
  dplyr::select(Time, Authors, Title, Format) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```

## Day 3: Thursday, May 1

```{r}
thu_31_df$Time <- times[1:dim(thu_31_df)[1]]

thu_31_df |>
  dplyr::filter(!is.na(Authors)) |>
  dplyr::arrange(Time) |>
  dplyr::select(Time, Authors, Title, Format) |>
  kableExtra::kable(format = 'html') |>
  kableExtra::kable_classic()
```
