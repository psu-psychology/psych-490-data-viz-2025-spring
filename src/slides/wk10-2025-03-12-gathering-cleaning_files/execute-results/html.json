{
  "hash": "53f661607774d630ceb7fed799ca266b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gathering and cleaning data\"\nsubtitle: \"2025-03-25\"\ncode_fold: false\n---\n\n\n\n# Prelude\n\n## In the news\n\n## Announcements\n\n- [Penn State Open Scholarship Initiative](https://penn-state-open-science.github.io)\n- [Workshop Thursday, March 27](https://penn-state-open-science.github.io/data-mgmt-2025)\n\n## Today's topics\n\n- Data processing workflows\n- Gathering data\n- Cleaning data\n\n## Data workflow\n\n::: {.incremental}\n- Collect\n- Gather\n- Clean\n- Visualize/plot\n- Analyze\n:::\n\n## Data workflow *we can script*\n\n- ~~Collect~~\n- Gather\n- Clean\n- Visualize/plot\n- Analyze\n\n## Data workflow *we can script*\n\n- ~~Collect~~\n- [**Gather**]{.green_assigned}\n- [**Clean**]{.green_assigned}\n- Visualize/plot\n- Analyze\n\n## Gather data\n\n- How to acquire/download\n  - Download manually\n  - Download programmatically (via code)\n- How to save\n  - Text formats, e.g., comma-separated values (csv), best\n  \n## Download manually\n\n- Visit forms.google.com\n\n![](../include/img/google-forms-list.png)\n\n## Download manually\n\n- Pick a form\n\n![](../include/img/google-forms-pick-a-form.png)\n\n## Download manually\n\n- Click on more options (...) menu\n\n![](../include/img/google-forms-more-options.png)\n\n## Download manually\n\n![](../include/img/google-forms-download-csv.png)\n\n## Download manually\n\n- Go to default download location (varies by computer)\n- Downloads as a zip (compressed) file\n\n![](../include/img/google-forms-download-csv-zip.png)\n\n## Download manually\n\n- Open compressed file\n\n![](../include/img/google-forms-view-unzipped-csv.png)\n\n## Download manually\n\n- Move file to target location\n\n![](../include/img/google-forms-move-csv.png)\n\n---\n\n![Giphy.com](https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExODZhYng2N3JlaWVwYWVrN2R1czNrczV3NmN0NXhjM3EydngzcGk1dCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/26FxsQwgJyU4me9ig/giphy.gif)\n\n## Download automatically\n\n- Two manual steps\n  - Create Google Sheets file: Click on \"Link to Sheets\"\n  \n![](../include/img/google-forms-more-options.png)\n\n---\n\n![](../include/img/google-forms-create-new-sheet.png)\n\n## Download automatically\n\n![](../include/img/google-forms-copy-sheet-name.png)\n\n## Download automatically\n\n- Log in to Google\n- Download specific URL\n- Save where I decide (`include/csv`) and with the name I choose (`PSYCH-490.003-Exercise-3.csv`)\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Download automatically\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"assignments.csv\"              \"PSYCH 490.003 Exercise 3.csv\"\n[3] \"PSYCH-490.003-Exercise-3.csv\" \"two_sets_1_sd.csv\"           \n```\n\n\n:::\n:::\n\n\n\n## Import CSV\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25  9\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Timestamp\"                                                                                \n[2] \"Favorite Icecream Flavor\"                                                                 \n[3] \"Best Pet Type\"                                                                            \n[4] \"How confident are you with your math skills? [How confident are you in your math skills?]\"\n[5] \"How confident are you with your math skills? [How creative are you?]\"                     \n[6] \"How many concerts have you gone to?\"                                                      \n[7] \"How many credits are you taking this semester?\"                                           \n[8] \"What is the date of your favorite holiday?\"                                               \n[9] \"Comments\"                                                                                 \n```\n\n\n:::\n:::\n\n\n## Import CSV\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25  9\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Timestamp\"                                                                                \n[2] \"Favorite Icecream Flavor\"                                                                 \n[3] \"Best Pet Type\"                                                                            \n[4] \"How confident are you with your math skills? [How confident are you in your math skills?]\"\n[5] \"How confident are you with your math skills? [How creative are you?]\"                     \n[6] \"How many concerts have you gone to?\"                                                      \n[7] \"How many credits are you taking this semester?\"                                           \n[8] \"What is the date of your favorite holiday?\"                                               \n[9] \"Comments\"                                                                                 \n```\n\n\n:::\n:::\n\n\n## Clean then visualize or vice versa?\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nFavorite Icecream Flavor\n          Chocolate Mint Chocolate Chip          Strawberry             Vanilla \n                  5                   9                   4                   7 \n```\n\n\n:::\n:::\n\n\n\n---\n\n::: {.callout-important}\n## Under the hood\n\n- R prefers that variable names *not* have spaces\n- When names have spaces, we have to communicate that to R\n- So, we wrap `Favorite Icecream Flavor` in backticks (\"`\").\n- the `xtabs()` function does cross-tabulations\n\n:::\n\n## Another cross-tabulation\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n                        Best Pet Type\nFavorite Icecream Flavor Cat Dog\n     Chocolate             2   3\n     Mint Chocolate Chip   3   6\n     Strawberry            2   2\n     Vanilla               2   5\n```\n\n\n:::\n:::\n\n\n\n## Clean then visualize\n\n- Rename variable names: Shorter, remove spaces\n- But capture the actual questions for later\n\n## Why script?\n\n- **Much** more reproducible and robust\n- Especially for complex sequences of tasks\n- Be kind to your future (forgetful) self\n\n# Resources\n\n## References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}